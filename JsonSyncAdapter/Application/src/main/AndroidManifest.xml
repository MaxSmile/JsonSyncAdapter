<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.vasilkoff.android"
    android:versionCode="1"
    android:versionName="1.0" >

    <!-- Required for fetching feed data. -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!-- Required to register a SyncStatusObserver to display a "syncing..." progress indicator. -->
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />
    <!-- Required to enable our SyncAdapter after it's created. -->
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
    <!-- Required because we're manually creating a new account. -->
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />

    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >


        <!--
        ContentProvider to store feed data.

        The "authorities" here are defined as part of a ContentProvider interface. It's used here
        as an attachment point for the SyncAdapter. See res/xml/syncadapter.xml and
        SyncService.java.

        Since this ContentProvider is not exported, it will not be accessible outside of this app's
        package.
        -->
        <provider
            android:name=".Sync.provider.DataProvider"
            android:authorities="com.vasilkoff.android.Sync"
            android:exported="false" />

        <!--
        This service implements our SyncAdapter. It needs to be exported, so that the system
        sync framework can access it.
        -->
        <service
            android:name=".Sync.SyncService"
            android:exported="true" >

            <!--
            This intent filter is required. It allows the system to launch our sync service
            as needed.
            -->
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
            </intent-filter>
            <!-- This points to a required XML file which describes our SyncAdapter. -->
            <meta-data
                android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>

        <!--
        This implements the account we'll use as an attachment point for our SyncAdapter. Since
        our SyncAdapter doesn't need to authenticate the current user.

        It's also possible to attach a SyncAdapter to an existing account provided by another
        package. In that case, this element could be omitted here.
        -->
        <service android:name=".Account.AccountService" >

            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>
            <!-- This points to an XMLf ile which describes our account service. -->
            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>

        <activity
            android:name=".UI.MenuListActivity"
            android:label="@string/title_item_list"
            android:parentActivityName=".UI.VideosListActivity" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".UI.VideosListActivity" />

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".UI.UsersListActivity"
            android:label="@string/Users_title" >
        </activity>
        <activity
            android:name=".UI.VideosListActivity"
            android:label="@string/Videos_title" >
        </activity>
        <activity
            android:name=".UI.AppsListActivity"
            android:label="@string/Apps_title" >
        </activity>
        <activity
            android:name=".UI.CommentsListActivity"
            android:label="@string/Apps_title" >
        </activity>

    </application>

</manifest>
